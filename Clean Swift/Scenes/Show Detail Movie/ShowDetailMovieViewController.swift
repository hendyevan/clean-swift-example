//
//  ShowDetailMovieViewController.swift
//  Clean Swift
//
//  Created by Fabianus Hendy Evan on 11/04/19.
//  Copyright (c) 2019 Fabianus Hendy Evan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ShowDetailMovieDisplayLogic: class
{
    func displayDetailMovie(viewModel: ShowDetailMovie.Something.ViewModel)
}

class ShowDetailMovieViewController: UIViewController
{
    var interactor: ShowDetailMovieBusinessLogic?
    var router: (NSObjectProtocol & ShowDetailMovieRoutingLogic & ShowDetailMovieDataPassing)?
    var movie: MovieModel.Movie2?
    @IBOutlet weak var tableView: UITableView!
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = ShowDetailMovieInteractor()
        let presenter = ShowDetailMoviePresenter()
        let router = ShowDetailMovieRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        
        self.tableView.contentInsetAdjustmentBehavior = .never
        self.tableView.dataSource = self
        self.tableView.delegate = self
        
        self.tableView.register(UINib(nibName: "MovieDescriptionTableViewCell", bundle: nil), forCellReuseIdentifier: "DescriptionCell")
        self.tableView.register(UINib(nibName: "MovieCastCrewTableViewCell", bundle: nil), forCellReuseIdentifier: "CastCrewCell")
        self.tableView.register(UINib(nibName: "MovieDetailsTableViewCell", bundle: nil), forCellReuseIdentifier: "DetailsCell")
        
        getDetailMovie()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
//        let yourBackImage = UIImage(named: "back")
//        self.navigationController?.navigationBar.backIndicatorImage = yourBackImage
//        self.navigationController?.navigationBar.backIndicatorTransitionMaskImage = yourBackImage
//        self.navigationController?.navigationBar.backItem?.title = ""
    }
    
    // MARK: Do something
    
    func getDetailMovie()
    {
        interactor?.showDetailMovie()
    }
    
}

extension ShowDetailMovieViewController: UITableViewDelegate, UITableViewDataSource {
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 3
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        switch indexPath.row {
        case 0:
            let cell = tableView.dequeueReusableCell(withIdentifier: "DescriptionCell", for: indexPath) as! MovieDescriptionTableViewCell
            cell.setupCell(movie: self.movie ?? MovieModel.Movie2())
            cell.selectionStyle = .none
            return cell
        case 1:
            let cell = tableView.dequeueReusableCell(withIdentifier: "CastCrewCell", for: indexPath) as! MovieCastCrewTableViewCell
            cell.selectionStyle = .none
            return cell
        case 2:
            let cell = tableView.dequeueReusableCell(withIdentifier: "DetailsCell", for: indexPath) as! MovieDetailsTableViewCell
            cell.selectionStyle = .none
            return cell
        default:
            return UITableViewCell()
        }
    }
}

extension ShowDetailMovieViewController: ShowDetailMovieDisplayLogic{
    func displayDetailMovie(viewModel: ShowDetailMovie.Something.ViewModel) {
        self.movie = viewModel.movie
        self.tableView.reloadData()
    }
}
